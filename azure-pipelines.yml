# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- '*'

pool:
  vmImage: ubuntu-latest
jobs:
  - job: build
    steps:
      - task: UseDotNet@2
        inputs:
          version: '6.x'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          projects: '$(Build.SourcesDirectory)/dotnet-ourchive.sln'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          projects: '$(Build.SourcesDirectory)/ui-tests/*.csproj'
          arguments: '-c Release /p:PublishProfile=$(Build.SourcesDirectory)/ui-tests/Properties/PublishProfiles/FolderProfile.pubxml -o $(Build.ArtifactStagingDirectory)'
          publishWebProjects: false 
          zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip published projects. Default: true.
          modifyOutputPath: true # boolean. Optional. Use when command = publish. Add project's folder name to publish path. Default: true.
        
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          publishLocation: 'pipeline'
          patterns: '**/*.zip'
          artifact: ui-tests
  - deployment: runUITests # Required as first property. Name of the deployment job, A-Z, a-z, 0-9, and underscore. The word deploy is a keyword and is unsupported as the deployment name.
    displayName: Run UI Tests Against Ourchive-Dev # Human-readable name for the deployment.
    dependsOn: build 
    pool:
      vmImage: windows-latest
    environment: ourchive-dev 
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UseDotNet@2
            inputs:
              version: '6.x'
          - task: DownloadSecureFile@1
            name: runsettings
            displayName: 'Download Default Runsettings'
            inputs:
              secureFile: 'default.runsettings'
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: '$(Agent.BuildDirectory)/ui-tests/*.zip' 
              cleanDestinationFolder: false # boolean. Clean destination folder before extracting. Default: true.
              destinationFolder: '$(System.DefaultWorkingDirectory)'
          - powershell: |
              [xml]$doc = Get-Content $(runsettings.secureFilePath)
              $doc.RunSettings.TestRunParameters.ChildNodes.Item(0).value = '$(webAppUrl)'
              $doc.RunSettings.TestRunParameters.ChildNodes.Item(1).value = '$(webAppUsername)'
              $doc.RunSettings.TestRunParameters.ChildNodes.Item(2).value = '$(webAppPassword)'
              $doc.RunSettings.TestRunParameters.ChildNodes.Item(3).value = '$(runHeadless)'
              
              $doc.Save("$(Build.SourcesDirectory)/UpdatedSettings.runsettings")
            displayName: 'Override TestRunParameters'
          - script: |
              dotnet test ui-tests.dll -s:$(Build.SourcesDirectory)/UpdatedSettings.runsettings --logger:nunit;LogFileName=TestResults.xml 
          # Publish test results to Azure Pipelines.
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'NUnit' # 'JUnit' | 'NUnit' | 'VSTest' | 'XUnit' | 'CTest'. Alias: testRunner. Required. Test result format. Default: JUnit.
              testResultsFiles: '**/TestResults.xml' # string. Required. Test results files. Default: **/TEST-*.xml.
              #searchFolder: '$(System.DefaultWorkingDirectory)' # string. Search folder. Default: $(System.DefaultWorkingDirectory).
              #mergeTestResults: false # boolean. Merge test results. Default: false.
              #failTaskOnFailedTests: false # boolean. Fail if there are test failures. Default: false.
              #testRunTitle: # string. Test run title. 
            # Advanced
              #buildPlatform: # string. Alias: platform. Build Platform. 
              #buildConfiguration: # string. Alias: configuration. Build Configuration. 
              #publishRunAttachments: true # boolean. Upload test results files. Default: true.
          - task: VSTest@2
            inputs:
              testSelector: 'testAssemblies' # 'testAssemblies' | 'testPlan' | 'testRun'. Required. Select tests using. Default: testAssemblies.
              testAssemblyVer2: 'ui-tests.dll' # string. Required when testSelector = testAssemblies. Test files. 
              searchFolder: '$(System.DefaultWorkingDirectory)' # string. Required. Search folder. Default: $(System.DefaultWorkingDirectory).
              resultsFolder: '$(Agent.TempDirectory)\TestResults' # string. Test results folder. Default: $(Agent.TempDirectory)\TestResults.
              uiTests: true # boolean. Test mix contains UI tests. Default: false.
            # Execution options
              #vstestLocationMethod: 'version' # 'version' | 'location'. Select test platform using. Default: version.
              #vsTestVersion: 'latest' # 'latest' | '17.0' | '16.0' | '15.0' | '14.0' | 'toolsInstaller'. Optional. Use when vstestLocationMethod = version. Test platform version. Default: latest.
              #vstestLocation: # string. Optional. Use when vstestLocationMethod = location. Path to vstest.console.exe. 
              runSettingsFile: $(Build.SourcesDirectory)/UpdatedSettings.runsettings # string. Settings file. 
              runInParallel: false # boolean. Run tests in parallel on multi-core machines. Default: False.
              #diagnosticsEnabled: false # boolean. Collect advanced diagnostics in case of catastrophic failures. Default: false.
              #collectDumpOn: 'onAbortOnly' # 'onAbortOnly' | 'always' | 'never'. Optional. Use when diagnosticsEnabled = true. Collect process dump and attach to test run report. Default: onAbortOnly.
              #rerunFailedTests: False # boolean. Rerun failed tests. Default: False.
              #rerunType: 'basedOnTestFailurePercentage' # 'basedOnTestFailurePercentage' | 'basedOnTestFailureCount'. Optional. Use when rerunFailedTests = true. Do not rerun if test failures exceed specified threshold. Default: basedOnTestFailurePercentage.
              #rerunFailedThreshold: '30' # string. Optional. Use when rerunFailedTests = true && rerunType = basedOnTestFailurePercentage. % failure. Default: 30.
              #rerunFailedTestCasesMaxLimit: '5' # string. Optional. Use when rerunFailedTests = true && rerunType = basedOnTestFailureCount. # of failed tests. Default: 5.
              #rerunMaxAttempts: '3' # string. Optional. Use when rerunFailedTests = true. Maximum # of attempts. Default: 3.
            # Advanced execution options
              #distributionBatchType: 'basedOnTestCases' # 'basedOnTestCases' | 'basedOnExecutionTime' | 'basedOnAssembly'. Batch tests. Default: basedOnTestCases.
              #batchingBasedOnAgentsOption: 'autoBatchSize' # 'autoBatchSize' | 'customBatchSize'. Optional. Use when distributionBatchType = basedOnTestCases. Batch options. Default: autoBatchSize.
              #customBatchSizeValue: '10' # string. Required when distributionBatchType = basedOnTestCases && batchingBasedOnAgentsOption = customBatchSize. Number of tests per batch. Default: 10.
              #batchingBasedOnExecutionTimeOption: 'autoBatchSize' # 'autoBatchSize' | 'customTimeBatchSize'. Optional. Use when distributionBatchType = basedOnExecutionTime. Batch options. Default: autoBatchSize.
              #customRunTimePerBatchValue: '60' # string. Required when distributionBatchType = basedOnExecutionTime && batchingBasedOnExecutionTimeOption = customTimeBatchSize. Running time (sec) per batch. Default: 60.
              #dontDistribute: False # boolean. Replicate tests instead of distributing when multiple agents are used in the job. Default: False.
            # Reporting options
              testRunTitle: 'UI Tests' # string. Test run title. 
              platform: 'Windows' # string. Build platform. 
              #configuration: # string. Build configuration. 
              publishRunAttachments: true # boolean. Upload test attachments. Default: true.
              failOnMinTestsNotRun: true # boolean. Fail the task if a minimum number of tests are not run. Default: False.
              minimumExpectedTests: '1' # string. Optional. Use when failOnMinTestsNotRun = true. Minimum #

